---
- name: Instalando Docker AWS EC2
  hosts: docker-ec2
  become: true
  gather_facts: no
  vars:
    logstach_folder: config-dir
    apm_folder: apm-dir

  tasks:
    - name: Atualizando o sistema operacional
      apt:
        name: '*'
        state: latest

    - name: Instalando pacotes necessários
      apt:
        pkg: 
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - openjdk-8-jre
        state: latest
        update_cache: yes
    
    - name: Adicionando Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Adicionando Repositorio Docker
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Atualizando o apt e instalando o docker-ce
      apt: 
        pkg: 
        - docker-ce
        - python3-pip
        update_cache: yes
        state: latest
    
    - name: Instalando modulo docker python
      pip:
        name: docker

    - name: Adicionando Key Jenkins
      apt_key: 
        url: https://pkg.jenkins.io/debian-stable/jenkins.io.key 
        state: present

    - name: Adicionando repositorio do Jenkins
      apt_repository: 
        repo: 'deb https://pkg.jenkins.io/debian-stable binary/'
        state: present

    - name: Instalando o Jenkins
      apt: 
        name: jenkins
        update_cache: yes

    - name: Iniciando o serviço do Jenkins
      service: 
        name: jenkins
        state: started

    - name: Adicionando usuario jenkins ao grupo Docker
      user: 
        name: jenkins
        groups: docker
        append: yes
      notify: Reboot host and wait for it to restart

    

    - name: Criando o Elasticsearch container
      docker_container:
        name: elasticsearch
        image: elasticsearch:7.6.2
        state: started
        hostname: elasticsearch
        env: discovery.type=single-node
        recreate: yes
        published_ports:
          - 9200:9200
          - 9300:9300

    - name: Criando o Kibana container
      docker_container:
        name: kibana
        image: kibana:6.8.15
        state: started
        hostname: kibana
        links: elasticsearch:elasticsearch
        recreate: yes
        published_ports:
          - 5601:5601

    - name: Verificar se o diretório logstash está presente
      file:
        path: "/home/ubuntu/{{ logstach_folder }}"
        state: directory

    - name: Copiando arquivo de configuração do Logstash
      copy:
        src: logstash.conf
        dest: "/home/ubuntu/{{ logstach_folder }}"

    - name: Criando o Logstash container
      docker_container:
        name: logstash
        image: logstash:6.8.15
        state: started
        hostname: logstash
        links: elasticsearch:elasticsearch
        recreate: yes
        published_ports:
          - 9500:9500
        volumes:
          - /home/ubuntu/{{ logstach_folder }}:/{{ logstach_folder }}"

    - name: Verificar se o diretório APM Sever está presente
      file:
        path: "/home/ubuntu/{{ apm_folder }}"
        state: directory

    - name: Copiando arquivo de configuração do APM
      copy:
        src: apm-server.docker.yml
        dest: "/home/ubuntu/{{ apm_folder }}"

    - name: Criando o APM Server container
      command: docker run -d --name=apm-server --user=apm-server --volume="/home/ubuntu/apm-dir/apm-server.docker.yml:/usr/share/apm-server/apm-server.yml:ro" --link elasticsearch:elasticsearch docker.elastic.co/apm/apm-server:7.12.0 --strict.perms=false -e -E output.elasticsearch.hosts=["elasticsearch:9200"] -e -E apm-server.host=0.0.0.0:8200
